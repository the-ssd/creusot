<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.6.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma" proved="true">
<path name=".."/><path name="17_filter.coma"/>
<theory name="M_17_filter__qyi17392541228996028033" proved="true">
 <goal name="next_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010954" steps="6188"/></proof>
 </goal>
 <goal name="produces_refl_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.011372" steps="6188"/></proof>
 </goal>
 <goal name="produces_trans_refn" proved="true">
 <proof prover="3"><result status="valid" time="0.010792" steps="6188"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__produces_refl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0" arg2="in" arg3="H">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
     <goal name="vc_produces_refl.0.0.0.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="vc_produces_refl.0.0.0.0.0" proved="true">
      <proof prover="3"><result status="valid" time="0.018539" steps="6342"/></proof>
      </goal>
      <goal name="vc_produces_refl.0.0.0.0.1" proved="true">
      <transf name="exists" proved="true" arg1="(empty : seq t_Item&#39;0)">
       <goal name="vc_produces_refl.0.0.0.0.1.0" proved="true">
       <proof prover="0" timelimit="1"><result status="valid" time="0.031251" steps="97182"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__produces_trans" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="rewrite" proved="true" arg1="inv_axiom&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="unfold" proved="true" arg1="produces&#39;0">
   <goal name="vc_produces_trans.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_produces_trans.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.032610" steps="10343"/></proof>
    </goal>
    <goal name="vc_produces_trans.0.0.1" proved="true">
    <transf name="exists" proved="true" arg1="(s ++ s1)">
     <goal name="vc_produces_trans.0.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun i -&gt; if i &lt; length ab then f i else (f1 (i - length ab) + length s))">
      <goal name="vc_produces_trans.0.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_trans.0.0.1.0.0.0" proved="true">
       <proof prover="3"><result status="valid" time="0.038305" steps="10826"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.1" proved="true">
       <proof prover="3"><result status="valid" time="0.045566" steps="12338"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.2" proved="true">
       <proof prover="3"><result status="valid" time="0.055358" steps="14133"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.3" proved="true">
       <proof prover="3"><result status="valid" time="0.047014" steps="12665"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.4" proved="true">
       <proof prover="3"><result status="valid" time="0.062241" steps="15255"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.5" proved="true">
       <proof prover="3"><result status="valid" time="0.114275" steps="29187"/></proof>
       </goal>
       <goal name="vc_produces_trans.0.0.1.0.0.6" proved="true">
       <transf name="case" proved="true" arg1="(i &lt; length s)">
        <goal name="vc_produces_trans.0.0.1.0.0.6.0" expl="true case" proved="true">
        <proof prover="3"><result status="valid" time="0.137718" steps="23509"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.0.1.0.0.6.1" expl="false case" proved="true">
        <transf name="instantiate" proved="true" arg1="H14" arg2="bor_f,(i - length s)">
         <goal name="vc_produces_trans.0.0.1.0.0.6.1.0" expl="false case" proved="true">
         <transf name="destruct_rec" proved="true" arg1="Hinst">
          <goal name="vc_produces_trans.0.0.1.0.0.6.1.0.0" expl="destruct premise" proved="true">
          <proof prover="3"><result status="valid" time="0.034611" steps="10954"/></proof>
          </goal>
          <goal name="vc_produces_trans.0.0.1.0.0.6.1.0.1" expl="destruct premise" proved="true">
          <proof prover="3"><result status="valid" time="0.041915" steps="11615"/></proof>
          </goal>
          <goal name="vc_produces_trans.0.0.1.0.0.6.1.0.2" expl="false case" proved="true">
          <proof prover="1" timelimit="1"><result status="valid" time="0.023711" steps="139"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__qyi17392541228996028033__next" proved="true">
 <goal name="vc_next" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_next.0" expl="mut invariant" proved="true">
  <proof prover="3"><result status="valid" time="0.015985" steps="7805"/></proof>
  </goal>
  <goal name="vc_next.1" expl="loop invariant 0" proved="true">
  <proof prover="1"><result status="valid" time="0.024133" steps="4"/></proof>
  </goal>
  <goal name="vc_next.2" expl="loop invariant 1" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.025173" steps="7946"/></proof>
  </goal>
  <goal name="vc_next.3" expl="loop invariant 2" proved="true">
  <proof prover="1"><result status="valid" time="0.034997" steps="9"/></proof>
  </goal>
  <goal name="vc_next.4" expl="loop invariant 3" proved="true">
  <transf name="assert" proved="true" arg1="(inv&#39;9 self.current)">
   <goal name="vc_next.4.0" expl="asserted formula" proved="true">
   <proof prover="1"><result status="valid" time="0.018889" steps="25"/></proof>
   </goal>
   <goal name="vc_next.4.1" expl="loop invariant 3" proved="true">
   <transf name="rewrite" proved="true" arg1="inv_axiom&#39;6" arg2="in" arg3="h">
    <goal name="vc_next.4.1.0" expl="loop invariant 3" proved="true">
    <transf name="revert" proved="true" arg1="h">
     <goal name="vc_next.4.1.0.0" expl="loop invariant 3" proved="true">
     <proof prover="1"><result status="valid" time="0.027217" steps="22"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next.5" expl="loop invariant 4" proved="true">
  <proof prover="1"><result status="valid" time="0.028314" steps="25"/></proof>
  </goal>
  <goal name="vc_next.6" proved="true">
  <proof prover="1"><result status="valid" time="0.023067" steps="69"/></proof>
  </goal>
  <goal name="vc_next.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.026465" steps="23"/></proof>
  </goal>
  <goal name="vc_next.8" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.032037" steps="32"/></proof>
  </goal>
  <goal name="vc_next.9" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.035556" steps="106"/></proof>
  </goal>
  <goal name="vc_next.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.018763" steps="28"/></proof>
  </goal>
  <goal name="vc_next.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.060862" steps="89104"/></proof>
  </goal>
  <goal name="vc_next.12" expl="assertion" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_next.12.0" expl="assertion" proved="true">
   <proof prover="3" timelimit="5"><result status="valid" time="0.037868" steps="13610"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next.13" proved="true">
  <proof prover="1"><result status="valid" time="0.041081" steps="138"/></proof>
  </goal>
  <goal name="vc_next.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.037547" steps="86"/></proof>
  </goal>
  <goal name="vc_next.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.026502" steps="39"/></proof>
  </goal>
  <goal name="vc_next.16" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.042632" steps="159"/></proof>
  </goal>
  <goal name="vc_next.17" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.028032" steps="96"/></proof>
  </goal>
  <goal name="vc_next.18" expl="mut invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.025954" steps="44"/></proof>
  </goal>
  <goal name="vc_next.19" expl="loop invariant 0" proved="true">
  <proof prover="1"><result status="valid" time="0.038957" steps="172"/></proof>
  </goal>
  <goal name="vc_next.20" expl="loop invariant 1" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.070454" steps="12434"/></proof>
  </goal>
  <goal name="vc_next.21" expl="loop invariant 2" proved="true">
  <proof prover="1"><result status="valid" time="0.033361" steps="48"/></proof>
  </goal>
  <goal name="vc_next.22" expl="loop invariant 3" proved="true">
  <proof prover="1"><result status="valid" time="0.027700" steps="57"/></proof>
  </goal>
  <goal name="vc_next.23" expl="loop invariant 4" proved="true">
  <proof prover="3" timelimit="5"><result status="valid" time="0.134054" steps="14730"/></proof>
  </goal>
  <goal name="vc_next.24" expl="type invariant" proved="true">
  <proof prover="1"><result status="valid" time="0.026169" steps="171"/></proof>
  </goal>
  <goal name="vc_next.25" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.043037" steps="44"/></proof>
  </goal>
  <goal name="vc_next.26" expl="postcondition" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_next.26.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="vc_next.26.0.0" expl="postcondition" proved="true">
    <proof prover="1"><result status="valid" time="0.020452" steps="56"/></proof>
    </goal>
    <goal name="vc_next.26.0.1" expl="postcondition" proved="true">
    <transf name="exists" proved="true" arg1="(snoc (inner produced) field_0)">
     <goal name="vc_next.26.0.1.0" proved="true">
     <transf name="exists" proved="true" arg1="(fun (_ : int) -&gt; length (inner produced))">
      <goal name="vc_next.26.0.1.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_next.26.0.1.0.0.0" proved="true">
       <proof prover="1"><result status="valid" time="0.029765" steps="56"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.1" proved="true">
       <proof prover="1"><result status="valid" time="0.047270" steps="136"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.2" proved="true">
       <proof prover="1"><result status="valid" time="0.022651" steps="73"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.3" proved="true">
       <proof prover="1"><result status="valid" time="0.034720" steps="62"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.4" proved="true">
       <proof prover="1"><result status="valid" time="0.017081" steps="80"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.5" proved="true">
       <proof prover="3" timelimit="5"><result status="valid" time="0.050648" steps="15048"/></proof>
       </goal>
       <goal name="vc_next.26.0.1.0.0.6" proved="true">
       <transf name="exists" proved="true" arg1="0">
        <goal name="vc_next.26.0.1.0.0.6.0" proved="true">
        <proof prover="3"><result status="valid" time="0.068595" steps="19747"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_next.27" proved="true">
  <proof prover="1"><result status="valid" time="0.017247" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__filter" proved="true">
 <goal name="vc_filter" proved="true">
 <proof prover="3"><result status="valid" time="0.026229" steps="6316"/></proof>
 </goal>
</theory>
<theory name="M_17_filter__less_than" proved="true">
 <goal name="vc_less_than" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_less_than.0" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.023115" steps="8963"/></proof>
  </goal>
  <goal name="vc_less_than.1" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.017634" steps="8358"/></proof>
  </goal>
  <goal name="vc_less_than.2" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.021039" steps="9004"/></proof>
  </goal>
  <goal name="vc_less_than.3" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016008" steps="8398"/></proof>
  </goal>
  <goal name="vc_less_than.4" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.025616" steps="9620"/></proof>
  </goal>
  <goal name="vc_less_than.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.026382" steps="10447"/></proof>
  </goal>
  <goal name="vc_less_than.6" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.024106" steps="9624"/></proof>
  </goal>
  <goal name="vc_less_than.7" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.026326" steps="10324"/></proof>
  </goal>
  <goal name="vc_less_than.8" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.016080" steps="8425"/></proof>
  </goal>
  <goal name="vc_less_than.9" expl="postcondition" proved="true">
  <transf name="destruct_rec" proved="true" arg1="Assert">
   <goal name="vc_less_than.9.0" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0" arg2="in" arg3="Assert1">
    <goal name="vc_less_than.9.0.0" expl="postcondition" proved="true">
    <transf name="destruct_rec" proved="true" arg1="Assert1">
     <goal name="vc_less_than.9.0.0.0" expl="postcondition" proved="true">
     <transf name="assert" proved="true" arg1="(forall i . contains&#39;0 s i -&gt; contains&#39;0 (view&#39;0 v) i)">
      <goal name="vc_less_than.9.0.0.0.0" expl="asserted formula" proved="true">
      <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
       <goal name="vc_less_than.9.0.0.0.0.0" expl="asserted formula" proved="true">
       <proof prover="1" timelimit="1"><result status="valid" time="0.077105" steps="1650"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="vc_less_than.9.0.0.0.1" expl="postcondition" proved="true">
      <proof prover="3"><result status="valid" time="0.070416" steps="20484"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_less_than.10" expl="postcondition" proved="true">
  <transf name="destruct_rec" proved="true" arg1="Assert1">
   <goal name="vc_less_than.10.0" expl="postcondition" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0" arg2="in" arg3="Assert2">
    <goal name="vc_less_than.10.0.0" expl="postcondition" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.322373" steps="97977"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_17_filter__less_than__qyClosure2" proved="true">
 <goal name="vc_m_17_filter__less_than__qyClosure2" proved="true">
 <proof prover="3"><result status="valid" time="0.010305" steps="1676"/></proof>
 </goal>
</theory>
</file>
</why3session>
