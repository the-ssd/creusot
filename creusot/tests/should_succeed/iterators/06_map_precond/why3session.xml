<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.5.3" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.12.4" timelimit="5" steplimit="0" memlimit="2000"/>
<prover id="4" name="CVC5" version="1.0.5" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="coma">
<path name=".."/><path name="06_map_precond.coma"/>
<theory name="M_06_map_precond__qyi18374305379273630819" proved="true">
 <goal name="produces_trans_refn" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.010885" steps="1"/></proof>
 <proof prover="4"><result status="valid" time="0.014456" steps="9966"/></proof>
 </goal>
 <goal name="next_refn" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.424443" steps="5762"/></proof>
 <proof prover="4"><result status="valid" time="0.166982" steps="21952"/></proof>
 </goal>
 <goal name="produces_refl_refn" proved="true">
 <proof prover="1" timelimit="1"><result status="valid" time="0.007106" steps="1"/></proof>
 <proof prover="4"><result status="valid" time="0.014104" steps="9966"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_refl" proved="true">
 <goal name="vc_produces_refl" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_refl.0" proved="true">
  <transf name="inline_goal" proved="true" >
   <goal name="vc_produces_refl.0.0" proved="true">
   <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
    <goal name="vc_produces_refl.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_refl.0.0.0.0" proved="true">
     <proof prover="0" timelimit="5"><result status="valid" time="0.049011" steps="14473"/></proof>
     </goal>
     <goal name="vc_produces_refl.0.0.0.1" proved="true">
     <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H">
      <goal name="vc_produces_refl.0.0.0.1.0" proved="true">
      <proof prover="2" memlimit="1000"><result status="valid" time="0.293605" steps="635381"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__produces_trans" proved="true">
 <goal name="vc_produces_trans" proved="true">
 <transf name="unfold" proved="true" arg1="produces&#39;0">
  <goal name="vc_produces_trans.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_trans.0.0" proved="true">
   <proof prover="1" timelimit="1"><result status="valid" time="0.021772" steps="54"/></proof>
   </goal>
   <goal name="vc_produces_trans.0.1" proved="true">
   <transf name="exists" proved="true" arg1="(fs++fs1)">
    <goal name="vc_produces_trans.0.1.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_trans.0.1.0.0" proved="true">
     <proof prover="1"><result status="valid" time="0.051060" steps="487"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.1" proved="true">
     <proof prover="1"><result status="valid" time="0.029943" steps="48"/></proof>
     </goal>
     <goal name="vc_produces_trans.0.1.0.2" proved="true">
     <transf name="exists" proved="true" arg1="(s++s1)">
      <goal name="vc_produces_trans.0.1.0.2.0" proved="true">
      <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
       <goal name="vc_produces_trans.0.1.0.2.0.0" proved="true">
       <transf name="split_vc" proved="true" >
        <goal name="vc_produces_trans.0.1.0.2.0.0.0" proved="true">
        <proof prover="1"><result status="valid" time="0.116568" steps="1044"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.1" proved="true">
        <proof prover="1"><result status="valid" time="0.031077" steps="53"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.2" proved="true">
        <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H">
         <goal name="vc_produces_trans.0.1.0.2.0.0.2.0" proved="true">
         <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H1">
          <goal name="vc_produces_trans.0.1.0.2.0.0.2.0.0" proved="true">
          <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H2">
           <goal name="vc_produces_trans.0.1.0.2.0.0.2.0.0.0" proved="true">
           <proof prover="4" timelimit="5"><result status="valid" time="0.091605" steps="23063"/></proof>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.3" proved="true">
        <proof prover="1"><result status="valid" time="0.032317" steps="47"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.4" proved="true">
        <proof prover="1"><result status="valid" time="0.091952" steps="541"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.5" proved="true">
        <proof prover="1"><result status="valid" time="0.031623" steps="93"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.6" proved="true">
        <proof prover="1"><result status="valid" time="0.053770" steps="271"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.7" proved="true">
        <proof prover="1"><result status="valid" time="0.058183" steps="332"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.8" proved="true">
        <proof prover="1"><result status="valid" time="0.181325" steps="1115"/></proof>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.9" proved="true">
        <transf name="instantiate" proved="true" arg1="H5" arg2="i">
         <goal name="vc_produces_trans.0.1.0.2.0.0.9.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
          <goal name="vc_produces_trans.0.1.0.2.0.0.9.0.0" proved="true">
          <proof prover="1"><result status="valid" time="0.448937" steps="3366"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_trans.0.1.0.2.0.0.10" proved="true">
        <transf name="instantiate" proved="true" arg1="H5" arg2="i">
         <goal name="vc_produces_trans.0.1.0.2.0.0.10.0" proved="true">
         <transf name="instantiate" proved="true" arg1="H15" arg2="(i-length ab)">
          <goal name="vc_produces_trans.0.1.0.2.0.0.10.0.0" proved="true">
          <proof prover="1"><result status="valid" time="0.445764" steps="3583"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi18374305379273630819__next" proved="true">
 <goal name="vc_next" proved="true">
 <proof prover="4"><result status="valid" time="0.413825" steps="37109"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__preservation_inv" proved="true">
 <goal name="vc_preservation_inv" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_preservation_inv.0" proved="true">
  <proof prover="4"><result status="valid" time="0.099951" steps="20365"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one_invariant" proved="true">
 <goal name="vc_produces_one_invariant" proved="true">
 <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
  <goal name="vc_produces_one_invariant.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one_invariant.0.0" proved="true">
   <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H5">
    <goal name="vc_produces_one_invariant.0.0.0" proved="true">
    <proof prover="4" timelimit="5"><result status="valid" time="0.082495" steps="17775"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant.0.1" proved="true">
   <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H1">
    <goal name="vc_produces_one_invariant.0.1.0" proved="true">
    <transf name="unfold" proved="true" arg1="next_precondition&#39;0">
     <goal name="vc_produces_one_invariant.0.1.0.0" proved="true">
     <transf name="unfold" proved="true" arg1="invariant&#39;0" arg2="in" arg3="H1">
      <goal name="vc_produces_one_invariant.0.1.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one_invariant.0.1.0.0.0.0" proved="true">
       <transf name="unfold" proved="true" arg1="preservation_inv&#39;0" arg2="in" arg3="H6">
        <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0" proved="true">
        <transf name="replace" proved="true" arg1="(inner (t_Map__produced self))" arg2="(inner (t_Map__produced self)++empty)">
         <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="H6" arg2="with" arg3="r,i">
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.022035" steps="157"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="4" timelimit="5"><result status="valid" time="0.080734" steps="12276"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.028182" steps="82"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.027905" steps="29"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="vc_produces_one_invariant.0.1.0.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="1"><result status="valid" time="0.013346" steps="26"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="vc_produces_one_invariant.0.2" proved="true">
   <transf name="unfold" proved="true" arg1="preservation_inv&#39;0">
    <goal name="vc_produces_one_invariant.0.2.0" proved="true">
    <transf name="rewrite" proved="true" arg1="inv&#39;0" arg2="in" arg3="H2">
     <goal name="vc_produces_one_invariant.0.2.0.0" proved="true">
     <transf name="unfold" proved="true" arg1="invariant&#39;0" arg2="in" arg3="H2">
      <goal name="vc_produces_one_invariant.0.2.0.0.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one_invariant.0.2.0.0.0.0" proved="true">
       <transf name="replace" proved="true" arg1="(snoc (inner (t_Map__produced self)) e ++ s)" arg2="(inner (t_Map__produced self) ++ cons e s)">
        <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0" proved="true">
        <transf name="unfold" proved="true" arg1="preservation_inv&#39;0" arg2="in" arg3="H14">
         <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0" proved="true">
         <transf name="apply" proved="true" arg1="H14" arg2="with" arg3="b,i">
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.0" expl="apply premises" proved="true">
          <proof prover="0" timelimit="5"><result status="valid" time="0.824079" steps="113088"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.1" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.031500" steps="47"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.2" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.050422" steps="198"/></proof>
          </goal>
          <goal name="vc_produces_one_invariant.0.2.0.0.0.0.0.0.3" expl="apply premises" proved="true">
          <proof prover="1"><result status="valid" time="0.047204" steps="201"/></proof>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
        <goal name="vc_produces_one_invariant.0.2.0.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="4" timelimit="5"><result status="valid" time="0.059867" steps="13553"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__qyi16548623944279504987__produces_one" proved="true">
 <goal name="vc_produces_one" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_produces_one.0" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="vc_produces_one.0.0" proved="true">
   <transf name="unfold" proved="true" arg1="produces&#39;0">
    <goal name="vc_produces_one.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="vc_produces_one.0.0.0.0" proved="true">
     <proof prover="1" timelimit="1"><result status="valid" time="0.017247" steps="18"/></proof>
     </goal>
     <goal name="vc_produces_one.0.0.0.1" proved="true">
     <transf name="exists" proved="true" arg1="(singleton f)">
      <goal name="vc_produces_one.0.0.0.1.0" proved="true">
      <transf name="split_vc" proved="true" >
       <goal name="vc_produces_one.0.0.0.1.0.0" proved="true">
       <proof prover="4"><result status="valid" time="0.106575" steps="17099"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.1" proved="true">
       <proof prover="4"><result status="valid" time="0.087038" steps="19901"/></proof>
       </goal>
       <goal name="vc_produces_one.0.0.0.1.0.2" proved="true">
       <transf name="exists" proved="true" arg1="(singleton e)">
        <goal name="vc_produces_one.0.0.0.1.0.2.0" proved="true">
        <transf name="split_vc" proved="true" >
         <goal name="vc_produces_one.0.0.0.1.0.2.0.0" proved="true">
         <proof prover="1"><result status="valid" time="0.024748" steps="84"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.1" proved="true">
         <proof prover="1"><result status="valid" time="0.016188" steps="23"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.2" proved="true">
         <proof prover="1"><result status="valid" time="0.015339" steps="16"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.3" proved="true">
         <proof prover="4" timelimit="5"><result status="valid" time="1.118267" steps="114021"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.4" proved="true">
         <proof prover="1"><result status="valid" time="0.032982" steps="24"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.5" proved="true">
         <proof prover="1"><result status="valid" time="0.031105" steps="20"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.6" proved="true">
         <proof prover="1"><result status="valid" time="0.028779" steps="21"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.7" proved="true">
         <proof prover="1"><result status="valid" time="0.022084" steps="25"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.8" proved="true">
         <proof prover="1"><result status="valid" time="0.039822" steps="78"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.9" proved="true">
         <proof prover="2" memlimit="1000"><result status="valid" time="0.111527" steps="414752"/></proof>
         </goal>
         <goal name="vc_produces_one.0.0.0.1.0.2.0.10" proved="true">
         <proof prover="2" memlimit="1000"><result status="valid" time="0.186407" steps="394604"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_produces_one.1" proved="true">
  <transf name="use_th" proved="true" arg1="seq.FreeMonoid">
   <goal name="vc_produces_one.1.0" proved="true">
   <proof prover="4"><result status="valid" time="0.574472" steps="69476"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__map" proved="true">
 <goal name="vc_map" proved="true">
 <proof prover="4" timelimit="5"><result status="valid" time="0.025407" steps="10008"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__identity" proved="true">
 <goal name="vc_identity" proved="true">
 <proof prover="4"><result status="valid" time="0.251818" steps="123084"/></proof>
 </goal>
</theory>
<theory name="M_06_map_precond__increment" proved="true">
 <goal name="vc_increment" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="vc_increment.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.095944" steps="15972"/></proof>
  </goal>
  <goal name="vc_increment.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.082459" steps="14965"/></proof>
  </goal>
  <goal name="vc_increment.2" expl="precondition" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.029129" steps="231"/></proof>
  </goal>
  <goal name="vc_increment.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.151673" steps="17758"/></proof>
  </goal>
  <goal name="vc_increment.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.058847" steps="18335"/></proof>
  </goal>
  <goal name="vc_increment.5" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.034504" steps="14910"/></proof>
  </goal>
  <goal name="vc_increment.6" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.344636" steps="100835"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="M_06_map_precond__counter">
 <goal name="vc_counter">
 <proof prover="0"><undone/></proof>
 <proof prover="1" timelimit="1"><result status="timeout" time="1.107216" steps="16139"/></proof>
 <proof prover="4"><result status="timeout" time="1.000000" steps="183383"/></proof>
 <transf name="split_vc" >
  <goal name="vc_counter.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.037466" steps="13471"/></proof>
  </goal>
  <goal name="vc_counter.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.028171" steps="11823"/></proof>
  </goal>
  <goal name="vc_counter.2" expl="precondition">
  <proof prover="0"><result status="timeout" time="1.000000" steps="121303"/></proof>
  <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="14267"/></proof>
  <proof prover="2"><result status="timeout" time="5.000000" steps="6419367"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="601910"/></proof>
  <transf name="use_th" arg1="seq.FreeMonoid">
   <goal name="vc_counter.2.0" expl="precondition">
   <proof prover="0"><result status="timeout" time="1.000000" steps="169392"/></proof>
   <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="16415"/></proof>
   <proof prover="2"><result status="timeout" time="5.000000" steps="9823563"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="761118"/></proof>
   <transf name="inline_goal" >
    <goal name="vc_counter.2.0.0" expl="precondition">
    <transf name="split_vc" >
     <goal name="vc_counter.2.0.0.0" expl="precondition">
     <proof prover="0"><result status="timeout" time="1.000000" steps="149842"/></proof>
     <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="23137"/></proof>
     <proof prover="2" timelimit="1" memlimit="1000"><result status="timeout" time="1.000000" steps="3135618"/></proof>
     <proof prover="4"><result status="timeout" time="1.000000" steps="169001"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   <transf name="inline_goal" >
    <goal name="vc_counter.2.0.0" expl="precondition">
    <transf name="split_all_full" >
     <goal name="vc_counter.2.0.0.0" expl="precondition">
     <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="24959"/></proof>
     <transf name="split_vc" >
      <goal name="vc_counter.2.0.0.0.0" expl="precondition">
      <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="25171"/></proof>
      <proof prover="2"><result status="timeout" time="5.000000" steps="18471485"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="636014"/></proof>
      <transf name="inline_goal" >
       <goal name="vc_counter.2.0.0.0.0.0" expl="precondition">
       <transf name="split_all_full" >
        <goal name="vc_counter.2.0.0.0.0.0.0" expl="precondition">
        <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="24152"/></proof>
        <proof prover="2"><result status="timeout" time="5.000000" steps="18674590"/></proof>
        <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="653921"/></proof>
        <transf name="inline_goal" >
         <goal name="vc_counter.2.0.0.0.0.0.0.0" expl="precondition">
         <transf name="split_all_full" >
          <goal name="vc_counter.2.0.0.0.0.0.0.0.0" expl="assertion" proved="true">
          <proof prover="4" timelimit="5" memlimit="2000"><result status="valid" time="0.114161" steps="31297"/></proof>
          </goal>
          <goal name="vc_counter.2.0.0.0.0.0.0.0.1" expl="integer overflow">
          <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="19968"/></proof>
          <transf name="split_vc" >
           <goal name="vc_counter.2.0.0.0.0.0.0.0.1.0" expl="integer overflow">
           <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="20839"/></proof>
           <proof prover="2"><result status="timeout" time="5.000000" steps="7483701"/></proof>
           <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="635854"/></proof>
           <transf name="inline_goal" >
            <goal name="vc_counter.2.0.0.0.0.0.0.0.1.0.0" expl="integer overflow">
            <transf name="split_all_full" >
             <goal name="vc_counter.2.0.0.0.0.0.0.0.1.0.0.0" proved="true">
             <proof prover="1" timelimit="1"><result status="valid" time="0.015814" steps="47"/></proof>
             </goal>
             <goal name="vc_counter.2.0.0.0.0.0.0.0.1.0.0.1">
             <proof prover="1" timelimit="1"><result status="timeout" time="1.000000" steps="23834"/></proof>
             <proof prover="2"><result status="timeout" time="5.000000" steps="7736887"/></proof>
             <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.000000" steps="630764"/></proof>
             <transf name="inline_goal" >
              <goal name="vc_counter.2.0.0.0.0.0.0.0.1.0.0.1.0">
              <proof prover="1" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="112433"/></proof>
              <proof prover="2" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="10006879"/></proof>
              <proof prover="4" timelimit="6" memlimit="4000"><result status="timeout" time="6.000000" steps="698945"/></proof>
              </goal>
             </transf>
             </goal>
            </transf>
            </goal>
           </transf>
           </goal>
          </transf>
          </goal>
         </transf>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="vc_counter.3" expl="precondition" proved="true">
  <proof prover="1" timelimit="1"><result status="valid" time="0.028537" steps="312"/></proof>
  </goal>
  <goal name="vc_counter.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.092388" steps="24111"/></proof>
  </goal>
  <goal name="vc_counter.5" expl="type invariant" proved="true">
  <proof prover="4"><result status="valid" time="0.028295" steps="11757"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
